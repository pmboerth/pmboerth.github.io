name: cleanup

on:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  # removes all but 10 most recent workflow runs
  delete-old-workflow-runs:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: delete old cd workflow runs
        run: |
          workflows=($(gh workflow list --json name | jq -r '.[].name'))
          for workflow in "${workflows[@]}"; do
            run_ids=($(gh run list --json databaseId,workflowName | jq -r '.[] | select(.workflowName == "${workflow}") | .databaseId')); run_ids=("${run_ids[@]:10}")
            echo "Deleting workflow runs for $workflow"
            for run_id in "${run_ids[@]}"; do
              echo "Deleting workflow run $run_id"
              gh run delete $run_id
            done
          done
        env:
          GH_TOKEN: ${{ github.token }}

  delete-cache:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: delete cache
        run: |
          cl=$(gh cache list)
          if [ -n "$cl" ]; then
            echo "Cache exists, deleting..."
            gh cache delete --all
          else
            echo "No cache found."
          fi
        env:
          GH_TOKEN: ${{ github.token }}

  delete-deployments:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: delete deployments
        run: |
          deployment_ids=($(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${GITHUB_REPO}/deployments | jq -r '.[].id'))
          for deployment_id in "${deployment_ids[@]}"; do
            state=$(gh api \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/$GITHUB_REPO/deployments/${deployment_id}/statuses | jq '.[0].state')
            if [ "$state" = '"inactive"' ]; then
              echo "Deleting deployment $deployment_id"
              gh api \
                --method DELETE \
                -H "Accept: application/vnd.github+json" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                /repos/${GITHUB_REPO}/deployments/${deployment_id}
            fi
          done
        env:
          GH_TOKEN: ${{ github.token }}
          GITHUB_REPO: ${{ github.repository }}
